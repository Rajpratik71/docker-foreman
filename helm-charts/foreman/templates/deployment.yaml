apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "foreman.fullname" . }}
  labels:
    {{- include "foreman.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "foreman.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "foreman.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "foreman.fullname" . }}-config
{{- if or .Values.sshKeySecret .Values.certifiateAuthoritySecret .Values.tlsSecret }}
          volumeMounts:
{{- if .Values.sshKeySecret }}
            - mountPath: /usr/share/foreman/.ssh
              name: ssh-key
              readOnly: true
{{- end }}
{{- if .Values.certifiateAuthoritySecret }}
            - mountPath: /etc/pki/ca-trust/source/anchors
              name: certificate-authority
              readOnly: true
{{- end }}
{{- if .Values.tlsSecret }}
            - mountPath: /etc/ssl/foreman
              name: tls
              readOnly: true
{{- end }}
{{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /users/login
              port: http
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /users/login
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: websockify-nginx
          image: "{{ .Values.nginxSidecar.image.repository }}:{{ .Values.nginxSidecar.image.tag }}"
          imagePullPolicy: {{ .Values.nginxSidecar.image.pullPolicy }}
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              name: nginx-config
              readOnly: true
          ports:
            - name: websockify
              containerPort: 5900
              protocol: TCP
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
{{- if .Values.sshKeySecret }}
        - name: ssh-key
          secret:
            secretName: {{ .Values.sshKeySecret }}
{{- end }}
{{- if .Values.certifiateAuthoritySecret }}
        - name: certificate-authority
          secret:
            secretName: {{ .Values.certifiateAuthoritySecret }}
{{- end }}
{{- if .Values.tlsSecret }}
        - name: tls
          secret:
            secretName: {{ .Values.tlsSecret }}
{{- end }}
        - name: nginx-config
          configMap:
            name: {{ include "foreman.fullname" . }}-websockify-nginx
